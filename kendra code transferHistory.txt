public List<Transfer> transferHistory (int userId) {
        List<Transfer> transfer = null;
        try {
            // Add code here to send the request to the API and get the auction from the response.
            ResponseEntity<Transfer> response = restTemplate.exchange(BASE_URL + userId,
                    HttpMethod.GET, makeAuthentication(), Transfer.class);
            transfer = response.getBody();
        } catch (RestClientResponseException | ResourceAccessException e) {
            BasicLogger.log(e.getMessage());
        }
        return transfer;
    }

    public List<Transfer> pendingRequest (int requestId) {
        List<Transfer> request = null;
        try {
            // Add code here to send the request to the API and get the auction from the response.
            ResponseEntity<Transfer> response = restTemplate.exchange(BASE_URL + requestId,
                    HttpMethod.GET, makeAuthentication(), Transfer.class);
            request = response.getBody();
        } catch (RestClientResponseException | ResourceAccessException e) {
            BasicLogger.log(e.getMessage());
        }
        return request;
    }


    private HttpEntity<Transfer> makeTransfer(Transfer transfer) {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        headers.setBearerAuth(currentUser.getToken());
        HttpEntity<Transfer> entity = new HttpEntity<>(transfer, headers);
        return entity;
    }

    private HttpEntity makeAuthentication() {
        HttpHeaders headers = new HttpHeaders();
        headers.setBearerAuth(currentUser.getToken());
        HttpEntity entity = new HttpEntity<>(headers);
        return entity;
    }
}